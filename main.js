document.addEventListener("DOMContentLoaded", function () {
    const sidebarLinks = document.querySelectorAll("#sidebarNav .nav-link");
  
    // –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ ‚Äî –ø–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ + –∫–ª–∞—Å—Å 'active'
    sidebarLinks.forEach(link => {
      link.addEventListener("click", (event) => {
        event.preventDefault();
  
        // –£–±–∏—Ä–∞–µ–º 'active' —É –≤—Å–µ—Ö, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ —Ç–µ–∫—É—â—É—é
        sidebarLinks.forEach(l => l.classList.remove("active"));
        link.classList.add("active");
  
        // –ë–µ—Ä—ë–º ID —Ü–µ–ª–µ–≤–æ–≥–æ –±–ª–æ–∫–∞
        const targetId = link.getAttribute("data-target") || link.getAttribute("href").replace("#", "");
        const targetSection = document.getElementById(targetId);
  
        // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Ä–∞–∑–¥–µ–ª—É
        if (targetSection) {
          targetSection.scrollIntoView({
            behavior: "smooth",
            block: "start"
          });
        }
      });
    });
  
    // ----------------------------
    // –ü—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è 4 –≥—Ä–∞—Ñ–∏–∫–æ–≤ (Chart.js)
    // ----------------------------
  
    // 1) –†–∞–±–æ—Ç–∞ –Ω–∞ —É—Ä–æ–∫–µ
    const ctxClassWork = document.getElementById('chartClassWork');
    if (ctxClassWork) {
      new Chart(ctxClassWork, {
        type: 'pie', // –Ω–∞–ø—Ä–∏–º–µ—Ä, 'pie'
        data: {
          labels: ['–í–æ–≤–ª–µ—á–µ–Ω', '–í–æ–≤–ª–µ—á–µ–Ω —Å –Ω–∞—Ä—É—à–µ–Ω–∏—è–º–∏', '–ù–µ –≤–æ–≤–ª–µ—á–µ–Ω', '–ù–µ –≤–æ–≤–ª–µ—á–µ–Ω —Å –Ω–∞—Ä—É—à–µ–Ω–∏—è–º–∏'],
          datasets: [{
            label: '–†–∞–±–æ—Ç–∞ –Ω–∞ —É—Ä–æ–∫–µ',
            data: [12, 5, 7, 3], // –∑–∞–≥–ª—É—à–∫–∞
            backgroundColor: ['#4CAF50', '#FFB74D', '#E91E63', '#BDBDBD']
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'bottom'
            }
          }
        }
      });
    }
  
    // 2) –û—Å–≤–æ–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
    const ctxMaterial = document.getElementById('chartMaterialUnderstanding');
    if (ctxMaterial) {
      new Chart(ctxMaterial, {
        type: 'bar', // —Å—Ç–æ–ª–±—á–∞—Ç–∞—è
        data: {
          labels: ['–ù–∏–∑–∫–æ–µ', '–°—Ä–µ–¥–Ω–µ–µ', '–í—ã—Å–æ–∫–æ–µ'],
          datasets: [{
            label: '–û—Å–≤–æ–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞',
            data: [4, 8, 10], // –∑–∞–≥–ª—É—à–∫–∞
            backgroundColor: ['#EF5350', '#FFEE58', '#66BB6A']
          }]
        },
        options: {
          responsive: true,
          indexAxis: 'y', // –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ —Å—Ç–æ–ª–±–∏–∫–∏
          scales: {
            x: {
              beginAtZero: true
            }
          },
          plugins: {
            legend: {
              display: false
            }
          }
        }
      });
    }
  
    // 3) –°–∞–º–æ–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞
    const ctxSelfPrep = document.getElementById('chartSelfPreparation');
    if (ctxSelfPrep) {
      new Chart(ctxSelfPrep, {
        type: 'pie',
        data: {
          labels: ['–í –ø–æ–ª–Ω–æ–º –æ–±—ä—ë–º–µ', '–ß–∞—Å—Ç–∏—á–Ω–æ', '–ù–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç'],
          datasets: [{
            label: '–°–∞–º–æ–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞',
            data: [9, 4, 2], // –∑–∞–≥–ª—É—à–∫–∞
            backgroundColor: ['#2196F3', '#FFC107', '#F44336']
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'bottom'
            }
          }
        }
      });
    }
  
    // 4) –î–∏–Ω–∞–º–∏–∫–∞ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏
    const ctxDynamics = document.getElementById('chartProgressDynamics');
    if (ctxDynamics) {
      new Chart(ctxDynamics, {
        type: 'doughnut',
        data: {
          labels: ['–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è', '–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π', '–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è'],
          datasets: [{
            label: '–î–∏–Ω–∞–º–∏–∫–∞ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏',
            data: [7, 10, 3], // –∑–∞–≥–ª—É—à–∫–∞
            backgroundColor: ['#4CAF50', '#9E9E9E', '#f44336']
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'bottom'
            }
          }
        }
      });
    }
  
  });
  document.addEventListener("DOMContentLoaded", function () {
    const sidebarLinks = document.querySelectorAll("#sidebarNav .nav-link");
  
    sidebarLinks.forEach(link => {
      link.addEventListener("click", (event) => {
        event.preventDefault();
        sidebarLinks.forEach(l => l.classList.remove("active"));
        link.classList.add("active");
  
        const targetId = link.getAttribute("data-target") || link.getAttribute("href").replace("#", "");
        const targetSection = document.getElementById(targetId);
        if (targetSection) {
          targetSection.scrollIntoView({ behavior: "smooth", block: "start" });
        }
      });
    });
  
    // üîπ –ì—Ä–∞—Ñ–∏–∫–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "–°–∞–º–æ–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞"
  
    // 1Ô∏è‚É£ –û–±—â–∞—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å —Å–∞–º–æ–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
    const ctxAttendance = document.getElementById('chartAttendance');
    if (ctxAttendance) {
      new Chart(ctxAttendance, {
        type: 'pie',
        data: {
          labels: ['–†–µ–≥—É–ª—è—Ä–Ω–æ –ø–æ—Å–µ—â–∞–µ—Ç', '–≠–ø–∏–∑–æ–¥–∏—á–µ—Å–∫–∏ –ø–æ—Å–µ—â–∞–µ—Ç', '–ù–µ –ø–æ—Å–µ—â–∞–µ—Ç'],
          datasets: [{
            data: [12, 7, 4],
            backgroundColor: ['#4CAF50', '#FFC107', '#F44336']
          }]
        },
        options: { responsive: true, plugins: { legend: { position: 'bottom' } } }
      });
    }
  
    // 2Ô∏è‚É£ –ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º (–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Bar Chart)
    const ctxSubjects = document.getElementById('chartSubjects');
    if (ctxSubjects) {
      new Chart(ctxSubjects, {
        type: 'bar',
        data: {
          labels: ['–†—É—Å—Å–∫–∏–π', '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–§–∏–∑–∏–∫–∞'],
          datasets: [
            { label: '–†–µ–≥—É–ª—è—Ä–Ω–æ', data: [10, 8, 6], backgroundColor: '#4CAF50' },
            { label: '–≠–ø–∏–∑–æ–¥–∏—á–µ—Å–∫–∏', data: [5, 6, 3], backgroundColor: '#FFC107' },
            { label: '–ù–µ –ø–æ—Å–µ—â–∞–µ—Ç', data: [2, 3, 5], backgroundColor: '#F44336' }
          ]
        },
        options: { responsive: true, plugins: { legend: { position: 'bottom' } } }
      });
    }
  
    // 3Ô∏è‚É£ –†–∞–±–æ—Ç–∞ –Ω–∞ –∑–∞–Ω—è—Ç–∏–∏ (Pie Chart)
    const ctxClasswork = document.getElementById('chartClasswork');
    if (ctxClasswork) {
      new Chart(ctxClasswork, {
        type: 'pie',
        data: {
          labels: ['–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ', '–ò–Ω–æ–≥–¥–∞ –∑–∞ –ø–æ–º–æ—â—å—é', '–ù–µ –º–æ–∂–µ—Ç —Å–∞–º'],
          datasets: [{ data: [10, 6, 5], backgroundColor: ['#4CAF50', '#FFC107', '#F44336'] }]
        },
        options: { responsive: true, plugins: { legend: { position: 'bottom' } } }
      });
    }
  
    // 4Ô∏è‚É£ –ü–æ–ª–Ω–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π (Stacked Bar Chart)
    const ctxTasks = document.getElementById('chartTasks');
    if (ctxTasks) {
      new Chart(ctxTasks, {
        type: 'bar',
        data: {
          labels: ['–†—É—Å—Å–∫–∏–π', '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–§–∏–∑–∏–∫–∞'],
          datasets: [
            { label: '–í –ø–æ–ª–Ω–æ–º –æ–±—ä—ë–º–µ', data: [8, 7, 5], backgroundColor: '#4CAF50' },
            { label: '–ß–∞—Å—Ç–∏—á–Ω–æ', data: [4, 5, 6], backgroundColor: '#FFC107' }
          ]
        },
        options: {
          responsive: true,
          plugins: { legend: { position: 'bottom' } },
          scales: { x: { stacked: true }, y: { stacked: true } }
        }
      });
    }
  });
  
  document.addEventListener("DOMContentLoaded", function () {
  
    // üîπ –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∏–∑ –±—ç–∫–µ–Ω–¥–∞)
    const individualTrackData = [
      { discipline: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", teacher: "–ò–≤–∞–Ω–æ–≤ –ò.–ò.", classwork: "–í–æ–≤–ª–µ—á–µ–Ω", understanding: "–í—ã—Å–æ–∫–æ–µ" },
      { discipline: "–§–∏–∑–∏–∫–∞", teacher: "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.", classwork: "–ù–µ –≤–æ–≤–ª–µ—á–µ–Ω", understanding: "–°—Ä–µ–¥–Ω–µ–µ" },
      { discipline: "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", teacher: "–°–∏–¥–æ—Ä–æ–≤–∞ –ê.–ê.", classwork: "–í–æ–≤–ª–µ—á–µ–Ω —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º", understanding: "–ù–∏–∑–∫–æ–µ" }
    ];
  
    // üîπ –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–∏—Å—Ü–∏–ø–ª–∏–Ω –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
    const tableBody = document.getElementById("individualTrackTable");
    individualTrackData.forEach(item => {
      const row = document.createElement("tr");
      row.innerHTML = `<td>${item.discipline}</td><td>${item.teacher}</td>`;
      tableBody.appendChild(row);
    });
  
    // üîπ –ü–æ–¥—Å—á—ë—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
    const classworkCounts = { "–í–æ–≤–ª–µ—á–µ–Ω": 0, "–í–æ–≤–ª–µ—á–µ–Ω —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º": 0, "–ù–µ –≤–æ–≤–ª–µ—á–µ–Ω": 0, "–ù–µ –≤–æ–≤–ª–µ—á–µ–Ω —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º": 0 };
    const understandingCounts = { "–ù–∏–∑–∫–æ–µ": 0, "–°—Ä–µ–¥–Ω–µ–µ": 0, "–í—ã—Å–æ–∫–æ–µ": 0 };
  
    individualTrackData.forEach(item => {
      if (classworkCounts[item.classwork] !== undefined) {
        classworkCounts[item.classwork]++;
      }
      if (understandingCounts[item.understanding] !== undefined) {
        understandingCounts[item.understanding]++;
      }
    });
  
    // üîπ –ì—Ä–∞—Ñ–∏–∫ "–†–∞–±–æ—Ç–∞ –Ω–∞ –∑–∞–Ω—è—Ç–∏–∏"
    const ctxClasswork = document.getElementById('chartIndividualClasswork');
    if (ctxClasswork) {
      new Chart(ctxClasswork, {
        type: 'pie',
        data: {
          labels: Object.keys(classworkCounts),
          datasets: [{
            data: Object.values(classworkCounts),
            backgroundColor: ['#4CAF50', '#FFC107', '#E91E63', '#BDBDBD']
          }]
        },
        options: {
          responsive: true,
          plugins: { legend: { position: 'bottom' } }
        }
      });
    }
  
    // üîπ –ì—Ä–∞—Ñ–∏–∫ "–û—Å–≤–æ–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞"
    const ctxUnderstanding = document.getElementById('chartIndividualUnderstanding');
    if (ctxUnderstanding) {
      new Chart(ctxUnderstanding, {
        type: 'bar',
        data: {
          labels: Object.keys(understandingCounts),
          datasets: [{
            label: '–û—Å–≤–æ–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞',
            data: Object.values(understandingCounts),
            backgroundColor: ['#EF5350', '#FFEE58', '#66BB6A']
          }]
        },
        options: {
          responsive: true,
          scales: { y: { beginAtZero: true } },
          plugins: { legend: { display: false } }
        }
      });
    }
  
  });
  

  document.addEventListener("DOMContentLoaded", function () {

    // üîπ –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
    const individualTrackData = [
      { discipline: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", classwork: [8, 5, 3, 2], understanding: [4, 6, 7] },
      { discipline: "–§–∏–∑–∏–∫–∞", classwork: [6, 4, 5, 3], understanding: [3, 5, 7] },
      { discipline: "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", classwork: [7, 6, 2, 1], understanding: [2, 4, 9] }
    ];
  
    // üîπ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
    const disciplineLabels = individualTrackData.map(d => d.discipline);
  
    // üîπ –ì—Ä–∞—Ñ–∏–∫ "–†–∞–±–æ—Ç–∞ –Ω–∞ –∑–∞–Ω—è—Ç–∏–∏" (4 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
    const ctxClasswork = document.getElementById('chartIndividualClasswork');
    if (ctxClasswork) {
      new Chart(ctxClasswork, {
        type: 'bar',
        data: {
          labels: disciplineLabels,
          datasets: [
            { label: '–í–æ–≤–ª–µ—á–µ–Ω', data: individualTrackData.map(d => d.classwork[0]), backgroundColor: '#4CAF50' },
            { label: '–í–æ–≤–ª–µ—á–µ–Ω —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º', data: individualTrackData.map(d => d.classwork[1]), backgroundColor: '#FFC107' },
            { label: '–ù–µ –≤–æ–≤–ª–µ—á–µ–Ω', data: individualTrackData.map(d => d.classwork[2]), backgroundColor: '#E91E63' },
            { label: '–ù–µ –≤–æ–≤–ª–µ—á–µ–Ω —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º', data: individualTrackData.map(d => d.classwork[3]), backgroundColor: '#9C27B0' }
          ]
        },
        options: {
          responsive: true,
          scales: { y: { beginAtZero: true } },
          plugins: { legend: { position: 'bottom' } }
        }
      });
    }
  
    // üîπ –ì—Ä–∞—Ñ–∏–∫ "–û—Å–≤–æ–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞" (3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
    const ctxUnderstanding = document.getElementById('chartIndividualUnderstanding');
    if (ctxUnderstanding) {
      new Chart(ctxUnderstanding, {
        type: 'bar',
        data: {
          labels: disciplineLabels,
          datasets: [
            { label: '–ù–∏–∑–∫–æ–µ', data: individualTrackData.map(d => d.understanding[0]), backgroundColor: '#EF5350' },
            { label: '–°—Ä–µ–¥–Ω–µ–µ', data: individualTrackData.map(d => d.understanding[1]), backgroundColor: '#FFEE58' },
            { label: '–í—ã—Å–æ–∫–æ–µ', data: individualTrackData.map(d => d.understanding[2]), backgroundColor: '#66BB6A' }
          ]
        },
        options: {
          responsive: true,
          scales: { y: { beginAtZero: true } },
          plugins: { legend: { position: 'bottom' } }
        }
      });
    }
  
  });
  
  document.addEventListener("DOMContentLoaded", function () {

    // üîπ –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
    const softSkillsData = {
      emotionalIntelligence: [10, 5, 3, 2], // 4 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      leadership: [8, 6, 4, 2], // 4 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      discipline: [12, 5, 3] // 3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    };
  
    // üîπ –ì—Ä–∞—Ñ–∏–∫ "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç"
    const ctxEmotionalIntelligence = document.getElementById('chartEmotionalIntelligence');
    if (ctxEmotionalIntelligence) {
      new Chart(ctxEmotionalIntelligence, {
        type: 'pie',
        data: {
          labels: ['–í–æ–≤–ª–µ—á–µ–Ω –∏ –ø—Ä–æ—è–≤–ª—è–µ—Ç –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É', '–í–æ–≤–ª–µ—á–µ–Ω —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º', '–ù–µ –≤–æ–≤–ª–µ—á–µ–Ω', '–ù–µ –≤–æ–≤–ª–µ—á–µ–Ω —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º'],
          datasets: [{
            data: softSkillsData.emotionalIntelligence,
            backgroundColor: ['#4CAF50', '#FFC107', '#E91E63', '#9C27B0']
          }]
        },
        options: {
          responsive: true,
          plugins: { legend: { position: 'bottom' } }
        }
      });
    }
  
    // üîπ –ì—Ä–∞—Ñ–∏–∫ "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è"
    const ctxLeadership = document.getElementById('chartLeadership');
    if (ctxLeadership) {
      new Chart(ctxLeadership, {
        type: 'pie',
        data: {
          labels: ['–í–æ–≤–ª–µ—á–µ–Ω –∏ –ø—Ä–æ—è–≤–ª—è–µ—Ç –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É', '–ù–∞ –±–∞–∑–æ–≤–æ–º —É—Ä–æ–≤–Ω–µ', '–†–µ–¥–∫–æ –ø–æ—Å–µ—â–∞–µ—Ç', '–ù–µ –ø–æ—Å–µ—â–∞–µ—Ç'],
          datasets: [{
            data: softSkillsData.leadership,
            backgroundColor: ['#4CAF50', '#FFC107', '#E91E63', '#9C27B0']
          }]
        },
        options: {
          responsive: true,
          plugins: { legend: { position: 'bottom' } }
        }
      });
    }
  
    // üîπ –ì—Ä–∞—Ñ–∏–∫ "–°–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –ø–æ–≤–µ–¥–µ–Ω–∏—è"
    const ctxDiscipline = document.getElementById('chartDiscipline');
    if (ctxDiscipline) {
      new Chart(ctxDiscipline, {
        type: 'bar',
        data: {
          labels: ['–ù–µ—Ç –∑–∞–º–µ—á–∞–Ω–∏–π', '–†–µ–¥–∫–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è', '–ß–∞—Å—Ç—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è'],
          datasets: [{
            label: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–µ–Ω–∏–∫–æ–≤',
            data: softSkillsData.discipline,
            backgroundColor: ['#4CAF50', '#FFC107', '#E91E63']
          }]
        },
        options: {
          responsive: true,
          scales: { y: { beginAtZero: true } },
          plugins: { legend: { display: false } }
        }
      });
    }
  
  });
  


  document.addEventListener("DOMContentLoaded", function () {

    // üîπ –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
    const personalSkillsData = {
      labels: [
        "–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
        "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å",
        "–ö–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å",
        "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ",
        "–°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å",
        "–£–º–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ"
      ],
      datasets: [{
        label: "–£—Ä–æ–≤–µ–Ω—å –≤–ª–∞–¥–µ–Ω–∏—è –Ω–∞–≤—ã–∫–∞–º–∏",
        data: [4, 3, 5, 2, 4, 3], // 1-5 —à–∫–∞–ª–∞ (–≥–¥–µ 1 - –Ω–∏–∑–∫–∏–π, 5 - –≤—ã—Å–æ–∫–∏–π)
        backgroundColor: "rgba(54, 162, 235, 0.2)",
        borderColor: "rgba(54, 162, 235, 1)",
        borderWidth: 2,
        pointBackgroundColor: "rgba(54, 162, 235, 1)",
        pointBorderColor: "#fff",
        pointHoverBackgroundColor: "#fff",
        pointHoverBorderColor: "rgba(54, 162, 235, 1)"
      }]
    };
  
    // üîπ –ì—Ä–∞—Ñ–∏–∫ "–†–∞–∑–≤–∏—Ç–∏–µ –ª–∏—á–Ω–æ—Å—Ç–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤" (Radar Chart)
    const ctxPersonalSkills = document.getElementById("chartPersonalSkills");
    if (ctxPersonalSkills) {
      new Chart(ctxPersonalSkills, {
        type: "radar",
        data: personalSkillsData,
        options: {
          responsive: true,
          scales: {
            r: {
              suggestedMin: 1,
              suggestedMax: 5,
              ticks: { stepSize: 1 }
            }
          },
          plugins: { legend: { position: "bottom" } }
        }
      });
    }
  
  });
  